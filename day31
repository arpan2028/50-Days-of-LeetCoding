#Longest Consecutive Sequence
#Optimized - o(n) solution
class Solution(object):
    def longestConsecutive(self, nums):
        num_set = set(nums)
        longest = 0
        
        for num in num_set:
            if num - 1 not in num_set:
                length = 0 
                while (num + length) in num_set:
                    length += 1
                longest = max(longest, length)     
        return longest

#Simple soln - o(nlogn)
class Solution(object):
    def longestConsecutive(self, nums):
        if not nums:
            return 0
        nums.sort()
        longest = 1
        current = 1
        for i in range(1, len(nums)):
            if nums[i] == nums[i - 1]:
                continue
            if nums[i] - nums[i - 1] == 1:
                current += 1
                longest = max(current,longest)
            else:
                current = 1
        return longest
