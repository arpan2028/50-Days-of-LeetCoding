1.Brute force way 
class Solution(object):
    def hammingWeight(self, n):
        """
        :type n: int
        :rtype: int
        """
        count = 0
        binary = format(n & 0xFFFFFFFF, '032b')  # force 32-bit two's complement
        for bit in binary:
            if bit == '1':     # No need to convert to int
                count += 1
        return count



2. Classic way 
class Solution(object):
    def hammingWeight(self, n):
        """
        :type n: int
        :rtype: int
        """
        count = 0
        while n:
            count += n % 2
            n = n // 2
        return count

3.Brian Kernighanâ€™s Algorithm way.
class Solution(object):
    def hammingWeight(self, n):
        """
        :type n: int
        :rtype: int
        """
        count = 0
        while n:
            n &= n - 1
            count += 1
        return count
