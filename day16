#Memoization
class Solution(object):
    def climbStairs(self, n):
        def helper(n, memo={}):
            if n in memo:
                return memo[n]
            if n <= 2:
                return n
            memo[n] = helper(n - 1, memo) + helper(n-2, memo)
            return memo[n]
        return helper(n)


#Tabulation(Most optimized)
class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n == 1:
            return 1
        a, b = 1, 2  # Base cases: 1 way for n=1, 2 ways for n=2
        for _ in range(3, n + 1):
            c = a + b  # Fibonacci logic
            a = b
            b = c
        return b
