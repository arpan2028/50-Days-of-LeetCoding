#Valid Anagram
#Solution 1 (Using Replace)
class Solution(object):
    def isAnagram(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        if len(s) != len(t):
            return False
        for char in t:
            if char in s:
                s = s.replace(char, '', 1)
        if len(s) == 0 and s == "":
            return True
        return False
        
#Solution 2 (Using Counter/dictionary)
class Solution(object):
    def isAnagram(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        if len(s) != len(t):
            return False
        countS, countT = {}, {}
        for i in range(len(s)):
            countS[s[i]] = 1 + countS.get(s[i], 0)
            countT[t[i]] = 1 + countT.get(t[i], 0)
        
        for c in countS:
            if countS[c] != countT.get(c, 0):
                return False
        return True

 #Solution 3 (One liner Solution using Counter)
  from collections import Counter
class Solution(object):
    def isAnagram(self, s, t):
        return Counter(s) == Counter(t)

#Solution 4 (One liner Solution using sorted)
class Solution(object):
    def isAnagram(self, s, t):
        return sorted(s) == sorted(t)

        
#understand
#plan
#implement
